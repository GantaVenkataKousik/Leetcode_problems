class Solution {
    public List<List<Integer>> threeSum(int[] arr) {
        
        List<List<Integer>> res = new ArrayList<>();
        // i is the base pointer j is the pointer next to i
        //k is the last pointer
        int n = arr.length;
        
        Arrays.sort(arr);
        for(int i=0 ; i<n-2  ; i++){
            if(i>0 && arr[i]==arr[i-1])continue;
            int j = i+1;
            int k = n-1;
            while(j<k){
                int sum= arr[i]+arr[j]+arr[k];
                if(sum<0){
                    j++;
                }
                else if(sum>0){
                    k--;
                }
                else{
                    List<Integer> l = new ArrayList<>();
                    l.add(arr[i]);
                    l.add(arr[j]);
                    l.add(arr[k]);
                    Collections.sort(l);
                    res.add(l);

                    j++;
                    k--;

                    //is j and k are pointing to the same prev elements then
                    //we are getting the same pairs
                    //so skip until you found new elements
                    while(j<k && arr[j]==arr[j-1])j++;
                    while(j<k && arr[k]==arr[k+1])k--;
                }
            }
            
        }
        return res;
    }
}
